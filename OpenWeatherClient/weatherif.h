/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -v -c WeatherIf -p weatherif.h:weatherif.cpp foo.bar.weather.xml
 *
 * qdbusxml2cpp is Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef WEATHERIF_H_1403968134
#define WEATHERIF_H_1403968134

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface foo.bar.weather
 */
class WeatherIf: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "foo.bar.weather"; }

public:
    WeatherIf(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~WeatherIf();
/*
public Q_SLOTS: // METHODS
    inline QDBusPendingReply<double> currentTemp(int cityId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(cityId);
        return asyncCallWithArgumentList(QLatin1String("currentTemp"), argumentList);
    }*/
signals:

Q_SIGNALS: // SIGNALS
    void searchCity(QString _t1);
    void searchCity(double lon, double lat);
    void currentTemp(int _t1);
    void currentPressure(int _t1);
    void currentCondition(int _t1);
    void forecastTemp(int _t1);
    void forecastPressure(int _t1);
    void forecastCondition(int _t1);
};

namespace foo {
  namespace bar {
    typedef ::WeatherIf weather;
  }
}
#endif
